
2.总体设计

2.1.系统概述

本系统是一个简单的IM即时通信系统。系统采用C/S架构，客户端运行在Windows上，服务器端运行在Linux上，两者通过互联网通信。


2.2.设计策略

系统应当功能合理，架构清晰，并具有良好的吞吐量，响应时间，可扩展性，可维护性等特点。


2.3.系统总体架构

<img src="系统架构图"/>

本系统采用分层结构。最上层是用户层，部署在客户端上，下面三层部署在服务器上。
用户层负责接收用户请求和向用户展示内容。
接口层负责客户端和服务器的通信。
服务层负责业务处理。
数据存储层负责数据的持久化存储。


2.4. 用户层

用户层负责接收用户请求和向用户展示内容，部署在客户端上。
用户层还要处理与服务器的通信，以向服务器发送请求和获得响应。
    

2.5.接口层

接口层在服务器端，负责和客户端通信，也是服务器端消息的入口。
根据IM应用的特点，通信主要分为两种方式：短轮询和长连接。
短轮询是指客户端以一定的时间间隔询问服务器是否有新消息出现。
长连接是指客户端和服务器维护一条TCP连接，当有新消息出现时，服务器主动通知客户端。
当用户当前回话稀疏时，采用短轮询方式，当会话密集时，采用长连接方式。


2.6.服务层

服务层处理具体的业务逻辑，主要架构如图所示：
<img src="功能结构图"/>

业务逻辑主要分为三块：用户管理模块，即时通信模块和媒体资源模块。
用户管理模块负责处理用户注册、用户登录、好友管理以及群组管理等功能。
即时通信模块负责用户和群组的消息转发，以及维护用户的消息队列等。
媒体资源模块负责图片和表情的存储和取用。


2.7.数据存储层

数据存储层主要使用数据库来实现数据的持久化存储。
需要持久化存储的数据包括用户信息，用户好友关系，群组信息，用户消息记录，群组消息记录以及媒体资源等等。

